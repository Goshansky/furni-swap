import { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import styles from "./Profile.module.css";
import Header from "../../components/Header/Header";
import Footer from "../../components/Footer/Footer";
import authService from "../../services/auth.service";
import userService, { User } from "../../services/user.service";
import listingService, { Listing } from "../../services/listing.service";

const Profile = () => {
    const navigate = useNavigate();
    const [user, setUser] = useState<User | null>(null);
    const [userListings, setUserListings] = useState<Listing[]>([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const isAuthenticated = authService.isAuthenticated();

    useEffect(() => {
        // Redirect if not authenticated
        if (!isAuthenticated) {
            navigate('/login', { state: { from: '/profile' } });
            return;
        }

        const fetchUserData = async () => {
            try {
                setIsLoading(true);
                
                // Fetch user profile
                const userData = await userService.getProfile();
                setUser(userData);
                
                // Fetch user's listings
                // Note: This is a placeholder as the API might not support this yet
                // You would implement the real API call when available
                try {
                    // This is a simulated API call
                    // Replace with actual API call when available
                    // const listingsData = await listingService.getUserListings();
                    const mockListings: Listing[] = [
                        {
                            id: 1,
                            title: "–£–¥–æ–±–Ω—ã–π –¥–∏–≤–∞–Ω",
                            description: "–û—Ç–ª–∏—á–Ω—ã–π –¥–∏–≤–∞–Ω –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏",
                            price: 15000,
                            category: "–î–∏–≤–∞–Ω—ã –∏ –∫—Ä–µ—Å–ª–∞",
                            location: "–ú–æ—Å–∫–≤–∞",
                            condition: "—Ö–æ—Ä–æ—à–µ–µ",
                            userId: 1,
                            images: ["https://via.placeholder.com/300"],
                            mainImage: "https://via.placeholder.com/300",
                            createdAt: "2023-05-15T10:30:00Z",
                            updatedAt: "2023-05-15T10:30:00Z"
                        },
                        {
                            id: 2,
                            title: "–ñ—É—Ä–Ω–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª–∏–∫",
                            description: "–°—Ç–æ–ª–∏–∫ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞",
                            price: 8000,
                            category: "–°—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è",
                            location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
                            condition: "–æ—Ç–ª–∏—á–Ω–æ–µ",
                            userId: 1,
                            images: ["https://via.placeholder.com/300"],
                            mainImage: "https://via.placeholder.com/300",
                            createdAt: "2023-06-20T14:45:00Z",
                            updatedAt: "2023-06-20T14:45:00Z"
                        }
                    ];
                    
                    setUserListings(mockListings);
                } catch (listingError) {
                    console.error("Error fetching user listings:", listingError);
                    // Continue even if listings fail to load
                    setUserListings([]);
                }
                
                setError(null);
            } catch (err) {
                console.error("Error fetching user data:", err);
                setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
            } finally {
                setIsLoading(false);
            }
        };

        fetchUserData();
    }, [isAuthenticated, navigate]);

    // Format date for display
    const formatDate = (dateString: string) => {
        return new Date(dateString).toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });
    };

    if (isLoading) {
        return (
            <div>
                <Header />
                <div className={styles.loadingContainer}>
                    <div className={styles.spinner}></div>
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p>
                </div>
                <Footer />
            </div>
        );
    }

    return (
        <div>
            <Header />
            <div className={styles.profileContainer}>
                <div className={styles.sidebar}>
                    <div className={styles.userCard}>
                        {user?.avatar ? (
                            <img src={user.avatar} alt="–ê–≤–∞—Ç–∞—Ä" className={styles.userAvatar} />
                        ) : (
                            <div className={styles.userAvatarPlaceholder}>
                                {user?.name?.charAt(0) || 'U'}
                            </div>
                        )}
                        <div className={styles.userInfo}>
                            <h2 className={styles.userName}>{user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</h2>
                            <p className={styles.userDetail}>
                                <span className={styles.detailLabel}>Email:</span>
                                <span>{user?.email || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</span>
                            </p>
                            <p className={styles.userDetail}>
                                <span className={styles.detailLabel}>–ì–æ—Ä–æ–¥:</span>
                                <span>{user?.city || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                            </p>
                            <p className={styles.userDetail}>
                                <span className={styles.detailLabel}>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                                <span>{user?.createdAt ? formatDate(user.createdAt) : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                            </p>
                        </div>
                    </div>
                    <div className={styles.sidebarLinks}>
                        <Link to="/favorites" className={styles.sidebarLink}>
                            <span className={styles.linkIcon}>‚ô•</span>
                            –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
                        </Link>
                        <Link to="/purchases" className={styles.sidebarLink}>
                            <span className={styles.linkIcon}>üõí</span>
                            –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫
                        </Link>
                        <Link to="/chats" className={styles.sidebarLink}>
                            <span className={styles.linkIcon}>üí¨</span>
                            –°–æ–æ–±—â–µ–Ω–∏—è
                        </Link>
                        <button 
                            className={styles.logoutButton}
                            onClick={() => {
                                authService.logout();
                                navigate('/login');
                            }}
                        >
                            –í—ã–π—Ç–∏
                        </button>
                    </div>
                </div>
                
                <div className={styles.content}>
                    {error && (
                        <div className={styles.errorMessage}>
                            {error}
                        </div>
                    )}
                    
                    <section className={styles.section}>
                        <div className={styles.sectionHeader}>
                            <h2 className={styles.sectionTitle}>–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</h2>
                            <Link to="/create-listing" className={styles.actionButton}>
                                –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                            </Link>
                        </div>
                        
                        {userListings.length === 0 ? (
                            <div className={styles.emptyState}>
                                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π</p>
                                <Link to="/create-listing" className={styles.linkButton}>
                                    –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                                </Link>
                            </div>
                        ) : (
                            <div className={styles.listingsGrid}>
                                {userListings.map((listing) => (
                                    <div key={listing.id} className={styles.listingCard}>
                                        <div className={styles.listingImage}>
                                            <img src={listing.mainImage} alt={listing.title} />
                                        </div>
                                        <div className={styles.listingInfo}>
                                            <Link to={`/product/${listing.id}`} className={styles.listingTitle}>
                                                {listing.title}
                                            </Link>
                                            <p className={styles.listingPrice}>{listing.price.toLocaleString()} ‚ÇΩ</p>
                                            <p className={styles.listingDate}>
                                                –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {formatDate(listing.createdAt)}
                                            </p>
                                        </div>
                                        <div className={styles.listingActions}>
                                            <button className={styles.editButton}>
                                                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                                            </button>
                                            <button className={styles.deleteButton}>
                                                –£–¥–∞–ª–∏—Ç—å
                                            </button>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}
                    </section>
                    
                    <section className={styles.section}>
                        <div className={styles.sectionHeader}>
                            <h2 className={styles.sectionTitle}>–ù–µ–¥–∞–≤–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏</h2>
                            <Link to="/purchases" className={styles.viewAllLink}>
                                –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
                            </Link>
                        </div>
                        
                        <div className={styles.purchasesPreview}>
                            <div className={styles.emptyState}>
                                <p>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç–∞</p>
                                <Link to="/catalog" className={styles.linkButton}>
                                    –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
                                </Link>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
            <Footer />
        </div>
    );
};

export default Profile;
